spring:
  application:
    name: authentication-structure-sp

  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 100MB

  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: org.postgresql.Driver
    url:  jdbc:postgresql://${URL_DB:localhost}:${PORT_DB:5432}/${NAME_DB:sp}
    username: ${USER_DB:java}
    password: ${PASSWORD_DB:123}
    hikari:
      poolName: Hikari
      auto-commit: false

  config:
    import: "classpath:resilience4j.yml"

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    database: postgresql
    show-sql: true
    open-in-view: false
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      # modify batch size as necessary
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true

  profiles:
    active: ${PROFILE:123456}

  quartz:
    job-store-type: jdbc
    scheduler-name: MainQuartzScheduler
    wait-for-jobs-to-complete-on-shutdown: true
    jdbc:
      initialize-schema: never
    properties:
      org.quartz.scheduler.instanceId: AUTO
      org.quartz.jobStore.driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
      org.quartz.jobStore.useProperties: false
      org.quartz.jobStore.isClustered: false
      org.quartz.jobStore.tablePrefix: sp.QRTZ_
      org.quartz.threadPool.threadCount: 5



server:
  port: ${PORT_APP:1711}
  servlet:
    session:
      cookie:
        http-only: true
    context-path: ${API_ENDPOINT:/api/v1}

security:
  issuer: ${ISSUER:quyetnd}
  signer-key: ${SIGNER_KEY:6EYyOxr}
  expiration-token-time: ${EXP_TOKEN_TIME:1200}
  refresh-token-time:  ${REFRESH_TOKEN_TIME:2400}
  password-default: ${PASSWORD_DEFAULT:1}

cache:
  redis:
    expiration: ${REDIS_EXP:3600}
    server: ${REDIS_SERVER:redis://localhost:6379}
    cluster: ${REDIS_IS_CLUSTER:false}
    connection-pool-size: ${REDIS_CON_POOL_SIZE:64}
    connection-minimum-idle-size: ${REDIS_CON_MINI_IDLE_SIZE:24}
    subscription-connection-pool-size: ${REDIS_SUB_CON_POOL_SIZE:50}
    subscription-connection-minimum-idle-size: ${REDIS_SUB_CON_MINI_IDLE_SIZE:1}
    # server: redis://localhost:6379,redis://localhost:16379,redis://localhost:26379

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always